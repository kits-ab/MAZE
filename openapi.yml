openapi: "3.0.3"
info:
  version: 1.0.0
  title: MAZE
  description: MAZE API
servers:
  - url: http://maze.azurewebsites.net/api
paths:
  /game:
    post:
      operationId: createGame
      responses:
        200:
          description: Created game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game'

  /game/{gameId}/characters:
    get:
      operationId: getCharacters
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/GameId'
      responses:
        200:
          description: Characters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Character'

  /game/{gameId}/characters/{characterId}:
    patch:
      operationId: updateCharacter
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/GameId'
        - name: characterId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CharacterId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
      responses:
        200:
          description: Updated character
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'

          
#game.com/api/game/abc123/mage/teleport POST
#(game.com/api/game/abc123/warrior/smash POST)
#(game.com/api/game/abc123/theif/disarm POST)
#game.com/api/game/abc123/cleric/heal POST
#(game.com/api/game/abc123/traps GET)
#game.com/api/game/abc123/locations GET
#game.com/api/game/abc123/obstacles GET
#game.com/api/game/abc123/obstacles/123 DELETE

components:
  schemas:
    PatchDocument:
      type: array
      items:
        $ref: '#/components/schemas/PatchOperation'

    PatchOperation: 
      description: A JSONPatch operation as defined by RFC 6902 
      required:
        - op
        - path
      properties: 
        op: 
          type: string 
          description: The operation to be performed 
          enum:
           - add
           - remove
           - replace
           - move
           - copy
           - test
        path: 
          type: string 
          description: A JSON-Pointer 
        value: 
          type: object 
          description: The value to be used within the operations.
        from: 
          type: string 
          description: A string containing a JSON Pointer value.

    GameId:
      description: A game identifier
      type: string
      readOnly: true

    Game:
      properties:
        id:
          $ref: '#/components/schemas/GameId'

    LocationId:
      description: A location identifier
      type: string
      readOnly: true

    Location:
      properties:
        id:
          $ref: '#/components/schemas/LocationId'

    PathId:
      description: A path identifier
      type: string
      readOnly: true

    Path:
      properties:
        id:
          $ref: '#/components/schemas/PathId'
        from:
          $ref: '#/components/schemas/LocationId'
        to:
          $ref: '#/components/schemas/LocationId'

    ObstacleId:
      description: An obstacle identifier
      type: string
      readOnly: true

    Obstacle:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
            - forcefield
            - lock
            - stone
            - ghost
        blockedPaths:
          description: Paths which are blocked by the obstacle
          type: array
          items:
            $ref: '#/components/schemas/PathId'

    TrapId:
      description: A trap identifier
      type: string
      readOnly: true

    Trap:
      properties:
        id:
          $ref: '#/components/schemas/TrapId'
        location:
          $ref: '#/components/schemas/LocationId'

    CharacterId:
      description: A character identifier
      type: string
      readOnly: true

    Character:
      properties:
        id:
          $ref: '#/components/schemas/CharacterId'
        location:
          $ref: '#/components/schemas/LocationId'
        health:
          description: Number of seconds left before dying
          type: number
          format: float
          minimum: 0
        hasWeapon:
          type: boolean
        abilityCooldown:
          description: Number of seconds before ability can be used
          type: number
          format: float
          minimum: 0

    Teleport:
      properties:
        target:
          $ref: '#/components/schemas/CharacterId'
        to:
          $ref: '#/components/schemas/CharacterId'

    Smash:
      properties:
        targetLocation: 
          $ref: '#/components/schemas/LocationId'

    Disarm:
      properties:
        trap:
          $ref: '#/components/schemas/TrapId'

    Heal:
      properties:
        targets:
          type: array
          items:
            $ref: '#/components/schemas/CharacterId'